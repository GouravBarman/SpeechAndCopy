{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\speechproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  SpeechRecognition.startListening({\n    continuous: true\n  });\n  const {\n    transcript,\n    listening,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Speech To Text Conerter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Converts speech from the microphone to text and makes it available to your React components.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-style\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: strt,\n          children: \"Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"stop Listening\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"MyAhbat+RMeck2eyThb7hbHvGiM=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","startListening","continuous","transcript","listening","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","strt","_c","$RefreshReg$"],"sources":["D:/React/speechproject/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst App=()=>{\n\n\n  SpeechRecognition.startListening({ continuous: true })\n  const {transcript,listening,browserSupportsSpeechRecognition} = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return(<>\n     <div className='container'>\n      <h2>Speech To Text Conerter</h2>\n      <br/>\n      <p>Converts speech from the microphone to text and makes it\navailable to your React components.</p>\n      <div className='main-content'>\n             {transcript}\n      </div>\n\n      <div className='btn-style'>\n        <button>copy</button>\n        <button onClick={strt}>Listening</button>\n        <button>stop Listening</button>\n      </div>\n     </div>\n  </>)\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnF,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EAGZP,iBAAiB,CAACQ,cAAc,CAAC;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;EACtD,MAAM;IAACC,UAAU;IAACC,SAAS;IAACC;EAAgC,CAAC,GAAGX,oBAAoB,CAAC,CAAC;EAEtF,IAAI,CAACW,gCAAgC,EAAE;IACrC,oBAAOT,OAAA;MAAAU,QAAA,EAAM;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjE;EAEA,oBAAOd,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACJV,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACzBV,OAAA;QAAAU,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLd,OAAA;QAAAU,QAAA,EAAG;MAC0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjCd,OAAA;QAAKe,SAAS,EAAC,cAAc;QAAAL,QAAA,EACrBH;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAENd,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBV,OAAA;UAAAU,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBd,OAAA;UAAQgB,OAAO,EAAEC,IAAK;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzCd,OAAA;UAAAU,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AACL,CAAC;AAAAV,EAAA,CA3BKD,GAAG;EAAA,QAIyDL,oBAAoB;AAAA;AAAAoB,EAAA,GAJhFf,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}